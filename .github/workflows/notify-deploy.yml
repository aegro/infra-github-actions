name: Notify Deploy

on:
  workflow_call:
    secrets:
      SLACK_TOKEN:
        description: 'Slack Token'
        required: false
      NR_API_KEY:
        description: 'New Relic API KEY'
        required: false
      VELOCITY_TOKEN:
        description: 'Velocity Token'
        required: false
    inputs:
      PREVIOUS_RESULT:
        description: 'Result from previous job(s)'
        required: false
        type: string
      SLACK_CHANNEL:
        description: 'Slack channel to notify'
        required: false
        type: string
      NR_ACCOUNT_ID:
        description: 'New Relic account ID'
        required: false
        type: string
      NR_APP_ID:
        description: 'New Relic application ID'
        required: false
        type: string
      ENVIRONMENT:
        description: 'Environment of deployed app'
        default: nil
        required: false
        type: string
      DESCRIPTION:
        description: 'Description of deployed version'
        default: nil
        required: false
        type: string
        
jobs:
  slack:
    runs-on: ubuntu-latest
    steps:
      - name: Slack Deployment Notify Success
        if: ${{ inputs.PREVIOUS_RESULT != 'failure' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ${{ inputs.SLACK_CHANNEL }}
          status: SUCCESS
          color: good
      - name: Slack Deployment Notify Failure
        if: ${{ inputs.PREVIOUS_RESULT == 'failure' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ${{ inputs.SLACK_CHANNEL }}
          status: FAILED
          color: danger
  new-relic:
    runs-on: ubuntu-latest
    if: ${{ inputs.PREVIOUS_RESULT != 'failure' }}
    steps:
      - name: New Relic Deployment Notify
        uses: newrelic/deployment-marker-action@v1.0.0
        with:
          apiKey: ${{ secrets.NR_API_KEY }}
          accountId: ${{ inputs.NR_ACCOUNT_ID }}
          applicationId: ${{ inputs.NR_APP_ID }}
          revision: $(date +'%Y%m%d-%H%M')_${{ github.sha }}
          description: ${{ inputs.DESCRIPTION }}
  velocity:
    runs-on: ubuntu-latest
    if: ${{ inputs.PREVIOUS_RESULT != 'failure' }}
    steps:
      - name: Velocity Deployment Notify
        run: |
            curl --fail https://velocity.codeclimate.com/deploys \
            -d "token=${{ secrets.VELOCITY_TOKEN }}" \
            -d "repository_url=${{ github.server_url }}/${{ github.repository }}" \
            -d "environment=${{ inputs.ENVIRONMENT }}" \
            -d "revision=${{ github.sha }}" \
            -d "version=$(date +'%Y%m%d-%H%M')_${{ github.sha }}"
